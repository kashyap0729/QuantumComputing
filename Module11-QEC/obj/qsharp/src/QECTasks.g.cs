//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task1\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":19}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task1\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task1\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":24,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":41},\"Item2\":{\"Line\":1,\"Column\":44}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Quantum.QEC.Task1\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task2\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Transparent\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":48,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":19}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task2\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":48,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task3\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":91,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":19}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task3\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":91,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task3\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":91,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":41},\"Item2\":{\"Line\":1,\"Column\":44}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Quantum.QEC.Task3\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task4\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Transparent\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":128,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"qs\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":19}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Pauli\"}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QEC\",\"Name\":\"Task4\"},\"Attributes\":[],\"SourceFile\":\"D:\\\\Quantum Computing\\\\Module11-QEC\\\\QECTasks.qs\",\"Position\":{\"Item1\":128,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"Documentation\":[]}")]
#line hidden
namespace Quantum.QEC
{
    [SourceLocation("D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs", OperationFunctor.Body, 25, 49)]
    [SourceLocation("D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs", OperationFunctor.Adjoint, 25, 49)]
    public partial class Task1 : Adjointable<IQArray<Qubit>>, ICallable
    {
        public Task1(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Task1";
        String ICallable.FullName => "Quantum.QEC.Task1";
        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QVoid> __Body__ => (__in__) =>
        {
            var qs = __in__;
#line 26 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[0L], qs[1L]));
#line 27 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(qs[1L]);
#line 28 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[0L], qs[2L]));
#line 29 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(qs[1L]);
#line 31 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 32 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(qs[1L]);
#line 33 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(qs[2L]);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<IQArray<Qubit>, QVoid> __AdjointBody__ => (__in__) =>
        {
            var qs = __in__;
#line 25 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(qs[2L]);
#line 25 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(qs[1L]);
#line 25 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(qs[0L]);
#line 25 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(qs[1L]);
#line 25 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[0L], qs[2L]));
#line 25 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(qs[1L]);
#line 25 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[0L], qs[1L]));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> qs)
        {
            return __m__.Run<Task1, IQArray<Qubit>, QVoid>(qs);
        }
    }

    [SourceLocation("D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs", OperationFunctor.Body, 49, 92)]
    public partial class Task2 : Operation<IQArray<Qubit>, Int64>, ICallable
    {
        public Task2(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Task2";
        String ICallable.FullName => "Quantum.QEC.Task2";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Pauli>,IQArray<Qubit>), Result> Microsoft__Quantum__Intrinsic__Measure
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, Int64> __Body__ => (__in__) =>
        {
            var qs = __in__;
#line hidden
            {
#line 50 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                var Abit = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 51 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var Bbit = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 54 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 55 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__H.Apply(qs[1L]);
#line 56 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__H.Apply(qs[2L]);
#line 59 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[0L], Abit));
#line 60 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[1L], Abit));
#line 62 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[1L], Bbit));
#line 63 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[2L], Bbit));
#line 66 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 67 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__H.Apply(qs[1L]);
#line 68 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            Microsoft__Quantum__Intrinsic__H.Apply(qs[2L]);
#line 70 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            var resA = Microsoft__Quantum__Intrinsic__Measure.Apply((new QArray<Pauli>(Pauli.PauliZ), new QArray<Qubit>(Abit)));
#line 71 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            var resB = Microsoft__Quantum__Intrinsic__Measure.Apply((new QArray<Pauli>(Pauli.PauliZ), new QArray<Qubit>(Bbit)));
#line 73 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            if (((resA == Result.Zero) && (resB == Result.Zero)))
                            {
#line 74 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                return -(1L);
                            }
                            else if (((resA == Result.Zero) && (resB == Result.One)))
                            {
#line 77 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                return 2L;
                            }
                            else if (((resA == Result.One) && (resB == Result.One)))
                            {
#line 80 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                return 1L;
                            }
                            else
                            {
#line 84 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                return 0L;
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(Bbit);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(Abit);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Microsoft__Quantum__Intrinsic__Measure = this.__Factory__.Get<ICallable<(IQArray<Pauli>,IQArray<Qubit>), Result>>(typeof(global::Microsoft.Quantum.Intrinsic.Measure));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, IQArray<Qubit> qs)
        {
            return __m__.Run<Task2, IQArray<Qubit>, Int64>(qs);
        }
    }

    [SourceLocation("D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs", OperationFunctor.Body, 92, 129)]
    [SourceLocation("D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs", OperationFunctor.Adjoint, 92, 129)]
    public partial class Task3 : Adjointable<IQArray<Qubit>>, ICallable
    {
        public Task3(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Task3";
        String ICallable.FullName => "Quantum.QEC.Task3";
        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, QVoid> __Body__ => (__in__) =>
        {
            var qs = __in__;
#line 94 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[0L], qs[3L]));
#line 95 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[0L], qs[6L]));
#line 97 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 98 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[0L], qs[2L]));
#line 99 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[0L], qs[1L]));
#line 101 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(qs[3L]);
#line 102 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[3L], qs[5L]));
#line 103 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[3L], qs[4L]));
#line 106 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Apply(qs[6L]);
#line 107 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[6L], qs[8L]));
#line 108 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[6L], qs[7L]));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<IQArray<Qubit>, QVoid> __AdjointBody__ => (__in__) =>
        {
            var qs = __in__;
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[6L], qs[7L]));
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[6L], qs[8L]));
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(qs[6L]);
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[3L], qs[4L]));
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[3L], qs[5L]));
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(qs[3L]);
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[0L], qs[1L]));
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[0L], qs[2L]));
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__H.Adjoint.Apply(qs[0L]);
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[0L], qs[6L]));
#line 92 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            Microsoft__Quantum__Intrinsic__CNOT.Adjoint.Apply((qs[0L], qs[3L]));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> qs)
        {
            return __m__.Run<Task3, IQArray<Qubit>, QVoid>(qs);
        }
    }

    [SourceLocation("D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs", OperationFunctor.Body, 129, -1)]
    public partial class Task4 : Operation<IQArray<Qubit>, (Int64,Pauli)>, ICallable
    {
        public Task4(IOperationFactory m) : base(m)
        {
        }

        public class Out : QTuple<(Int64,Pauli)>, IApplyData
        {
            public Out((Int64,Pauli) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "Task4";
        String ICallable.FullName => "Quantum.QEC.Task4";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> Reset__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        public override Func<IQArray<Qubit>, (Int64,Pauli)> __Body__ => (__in__) =>
        {
            var qs = __in__;
#line 130 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            var startIndexes = (IQArray<Int64>)new QArray<Int64>(0L, 3L, 6L);
#line 131 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
            var eX = -(1L);
#line hidden
            {
#line 132 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                var Abits = Allocate__.Apply(6L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 134 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                    foreach (var groupIndex in new QRange(0L, 2L))
#line hidden
                    {
#line 135 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var start = startIndexes[groupIndex];
#line 136 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var q0 = qs[start];
#line 137 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var q1 = qs[(start + 1L)];
#line 138 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var q2 = qs[(start + 2L)];
#line 140 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var a0 = Abits[(2L * groupIndex)];
#line 141 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var a1 = Abits[((2L * groupIndex) + 1L)];
#line 143 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        Microsoft__Quantum__Intrinsic__CNOT.Apply((q0, a0));
#line 144 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        Microsoft__Quantum__Intrinsic__CNOT.Apply((q1, a0));
#line 145 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        Microsoft__Quantum__Intrinsic__CNOT.Apply((q1, a1));
#line 146 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        Microsoft__Quantum__Intrinsic__CNOT.Apply((q2, a1));
#line 148 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var result0 = Microsoft__Quantum__Intrinsic__M.Apply(a0);
#line 149 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var result1 = Microsoft__Quantum__Intrinsic__M.Apply(a1);
#line 151 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        if (((result0 == Result.One) && (result1 == Result.Zero)))
                        {
#line 152 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            eX = start;
                        }
                        else if (((result0 == Result.One) && (result1 == Result.One)))
                        {
#line 154 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            eX = (start + 1L);
                        }
                        else if (((result0 == Result.Zero) && (result1 == Result.One)))
                        {
#line 156 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            eX = (start + 2L);
                        }

#line 159 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        Reset__.Apply(a0);
#line 160 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        Reset__.Apply(a1);
                    }

#line 163 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                    foreach (var i in new QRange(0L, 8L))
#line hidden
                    {
#line 164 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(qs[i]);
                    }

#line hidden
                    {
#line 167 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                        var Bbits = Allocate__.Apply(2L);
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line 168 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            foreach (var i in new QRange(0L, 5L))
#line hidden
                            {
#line 169 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[i], Bbits[0L]));
                            }

#line 171 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            foreach (var i in new QRange(3L, 8L))
#line hidden
                            {
#line 172 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                Microsoft__Quantum__Intrinsic__CNOT.Apply((qs[i], Bbits[1L]));
                            }

#line 174 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            foreach (var i in new QRange(0L, 8L))
#line hidden
                            {
#line 175 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                Microsoft__Quantum__Intrinsic__H.Apply(qs[i]);
                            }

#line 177 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            var result2 = Microsoft__Quantum__Intrinsic__M.Apply(Bbits[0L]);
#line 178 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            var restult3 = Microsoft__Quantum__Intrinsic__M.Apply(Bbits[1L]);
#line 179 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            var eZ = -(1L);
#line 180 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            if (((result2 == Result.One) && (restult3 == Result.Zero)))
                            {
#line 181 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                eZ = 0L;
                            }
                            else if (((result2 == Result.One) && (restult3 == Result.One)))
                            {
#line 183 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                eZ = 1L;
                            }
                            else if (((result2 == Result.Zero) && (restult3 == Result.One)))
                            {
#line 185 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                eZ = 2L;
                            }

#line 187 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                            if (((eX != -(1L)) && (eZ == -(1L))))
                            {
#line 188 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                return (eX, Pauli.PauliX);
                            }
                            else if (((eX != -(1L)) && (eZ != -(1L))))
                            {
#line 190 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                return (eX, Pauli.PauliY);
                            }
                            else if (((eX == -(1L)) && (eZ != -(1L))))
                            {
#line 192 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                return (eZ, Pauli.PauliZ);
                            }
                            else
                            {
#line 194 "D:\\Quantum Computing\\Module11-QEC\\QECTasks.qs"
                                return (-(1L), Pauli.PauliI);
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(Bbits);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(Abits);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.Reset__ = this.__Factory__.Get<ICallable<Qubit, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Reset));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __DataIn__(IQArray<Qubit> data) => data;
        public override IApplyData __DataOut__((Int64,Pauli) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Int64,Pauli)> Run(IOperationFactory __m__, IQArray<Qubit> qs)
        {
            return __m__.Run<Task4, IQArray<Qubit>, (Int64,Pauli)>(qs);
        }
    }
}